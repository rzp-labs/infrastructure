---
- name: Deploy Docker Compose stack to homelab
  hosts: homelab
  become: true

  vars:
    stack_name: "{{ stack | default('') }}"
    stacks_src_dir: "../stacks"
    stacks_dest_dir: "/opt/stacks"

  tasks:
    - name: Validate stack name is provided
      ansible.builtin.assert:
        that:
          - stack_name != ''
        fail_msg: "You must provide a stack name with -e stack=<stack_name>"

    - name: Create stacks directory on remote host
      ansible.builtin.file:
        path: "{{ stacks_dest_dir }}"
        state: directory
        mode: '0755'

    - name: Create stack directory
      ansible.builtin.file:
        path: "{{ stacks_dest_dir }}/{{ stack_name }}"
        state: directory
        mode: '0755'

    - name: Copy stack files to remote host
      ansible.posix.synchronize:
        src: "{{ stacks_src_dir }}/{{ stack_name }}/"
        dest: "{{ stacks_dest_dir }}/{{ stack_name }}/"
        delete: true
        rsync_opts:
          - "--exclude=.env"
        use_ssh_args: true

    - name: Check if .env file exists on remote
      ansible.builtin.stat:
        path: "{{ stacks_dest_dir }}/{{ stack_name }}/.env"
      register: env_file

    - name: Warn if .env doesn't exist
      ansible.builtin.debug:
        msg: "WARNING: .env file not found at {{ stacks_dest_dir }}/{{ stack_name }}/.env - copy .env.example and configure it"
      when: not env_file.stat.exists

    - name: Create proxy network if deploying traefik
      community.docker.docker_network:
        name: proxy
        state: present
      when: stack_name == 'traefik'

    - name: Set permissions on acme.json for traefik
      ansible.builtin.file:
        path: "{{ stacks_dest_dir }}/{{ stack_name }}/acme.json"
        state: touch
        mode: '0600'
      when: stack_name == 'traefik'

    - name: Deploy stack with docker-compose
      community.docker.docker_compose_v2:
        project_src: "{{ stacks_dest_dir }}/{{ stack_name }}"
        state: present
        pull: "always"
      register: output

    - name: Show deployment result
      ansible.builtin.debug:
        var: output
